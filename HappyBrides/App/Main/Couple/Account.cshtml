@using HappyBrides.Authentication
@using HappyBrides.Database
@{
    Layout = "_Layout.cshtml";

    Page.Title = "Couple";

    /* FORM CONSTANTS */

    const string FORM_ACTION = "action";

    const string FORM_COUPLE_NAME = "couple_name";
    const string FORM_COUPLE_PARTNERNAME = "couple_partner_name";

    const string FORM_ACCOUNT_EMAIL = "account_email";

    const string FORM_GIFT_NAME = "gift_name";
    const string FORM_GIFT_DESCRIPTION = "gift_description";

    const string FORM_GIFT_ID = "gift_id";
    const string FORM_GIFT_NEWPRIORITY = "gift_new_priority";

    /* ACTION CONSTANTS */

    const string ACTION_LOGOUT = "logout";

    const string ACTION_ADD_GIFT = "add_gift";
    const string ACTION_CHANGE_PRIORITY = "change_priority";
    const string ACTION_REMOVE_GIFT = "remove_gift";

    var couple = new CoupleAgent(Session);

    if (IsPost)
    {
	Validation.Add(FORM_ACTION, Validator.Required());

	if (!Validation.IsValid())
	{
	    return;
	}

	var action = Request.Form[FORM_ACTION] as string;

	switch (action)
	{
	    case ACTION_LOGOUT:
		couple.Logout();

		Response.Redirect("~/App/Portal/Login");

		break;

	    case ACTION_ADD_GIFT:
		Validation.Add(FORM_GIFT_NAME, Validator.StringLength(64), Validator.Required());
		Validation.Add(FORM_GIFT_DESCRIPTION, Validator.Required());

		if (!Validation.IsValid())
		{
		    return;
		}

		var name = Request.Form[FORM_GIFT_NAME] as string;
		var description = Request.Form[FORM_GIFT_DESCRIPTION] as string;

		HappyBridesDB.CreateGift(couple.Wishlist, name, description);

		break;

	    case ACTION_CHANGE_PRIORITY:
		Validation.Add(FORM_GIFT_ID, Validator.Integer(), Validator.Required());
		Validation.Add(FORM_GIFT_NEWPRIORITY, Validator.Integer(), Validator.Required());

		if (!Validation.IsValid())
		{
		    return;
		}

		var gift = new GiftHandle(System.Int64.Parse(Request.Form[FORM_GIFT_ID]));
		var gift_newPriority = Request.Form[FORM_GIFT_NEWPRIORITY].AsInt();

		gift.SetPriority(gift_newPriority);

		break;

	    case ACTION_REMOVE_GIFT:
		Validation.Add(FORM_GIFT_ID, Validator.Integer(), Validator.Required());

		if (!Validation.IsValid())
		{
		    return;
		}

		var gift_to_remove = new GiftHandle(System.Int64.Parse(Request.Form[FORM_GIFT_ID]));

		HappyBridesDB.DeleteGift(couple.Wishlist, gift_to_remove);

		break;

	}

	Response.Redirect("~/App/Main/Couple/Account");
    }

}

@section head
{
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"
	    integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU="
	    crossorigin="anonymous"></script>

    <script src="~/Content/js/wishlist.js"></script>
}

<div class="col-xl-4 bg-light border-right">
    <br />
    <h1 class="text-center">Your Account</h1>
    <hr />
    <img class="d-block mt-5 mb-4 mx-auto bg-white rounded-circle border shadow-sm" src="~/Content/img/icons/couple.png" width="192" height="192">
    <form method="post">
	<input name="@FORM_ACTION" type="hidden" value="@ACTION_LOGOUT" required>
        <button class="d-block mx-auto btn btn-primary" type="submit">Logout</button>
    </form>
    <hr />
    <form method="post">
        <label>Partner Names</label>
        <div class="row">
            <div class="col">
                <input class="form-control" name="@FORM_COUPLE_NAME" type="text" value="@couple.Name" readonly>
            </div>
            <div class="col">
                <input class="form-control" name="@FORM_COUPLE_PARTNERNAME" type="text" value="@couple.PartnerName" readonly>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col">
                <label for="@FORM_ACCOUNT_EMAIL">Email Address</label>
                <input class="form-control" name="@FORM_ACCOUNT_EMAIL" type="email" value="@couple.Account.GetEmail()" readonly>
            </div>
        </div>
    </form>
</div>
<div class="col-xl bg-white">
    <br />
    <h1 class="text-center">
        <!-- FIX CENTERING -->
        <span class="float-left fas fa-plus-circle text-white"></span>
        Your Wishlist
        <span class="zindex-popover float-right fas fa-plus-circle" data-toggle="modal" data-target="#add_gift_modal"></span>
    </h1>
    <hr />
    <p class="text-center">Guest Code: <span class="text-primary">@couple.Wishlist.GetGuestCode()</span></p>
    <div class="w-50 p-1 mx-auto border rounded overflow-auto bg-light" id="wishlist">
        @foreach (var gift in couple.Wishlist.GetGifts())
	{
            <div class="rounded p-2 mb-1 bg-white shadow-sm" id="@gift.id">
                <h6>@gift.GetName()<span class="float-right fas fa-times-circle" onclick="removeGift(@gift.id)"></span></h6>
                <p>@gift.GetDescription()</p>
            </div>
	}
    </div>

    <div class="modal fade" id="add_gift_modal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title mx-auto">Add a new gift</h5>
                </div>
                <div class="modal-body">
                    <form method="post">
			<div class="form-group">
			    <label for="@FORM_GIFT_NAME">Name</label>
			    <input class="form-control" name="@FORM_GIFT_NAME" type="text" placeholder="Enter gift name" required/>
			</div>
			<div class="form-group">
			    <label for="@FORM_GIFT_DESCRIPTION">Description</label>
			    <textarea class="form-control" name="@FORM_GIFT_DESCRIPTION" rows="4" placeholder="Enter gift description" required></textarea>
			</div>
			<input name="@FORM_ACTION" type="hidden" value="@ACTION_ADD_GIFT" required/>
			<button class="d-block btn btn-primary mx-auto" type="submit">Add gift</button>
		    </form>
                </div>
            </div>
        </div>
    </div>

</div>

<script>

</script>